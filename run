#!/bin/bash

echo bash
bash/loops.sh
echo

echo c
if [ ! -f c/loops.out ]; then
  cc c/loops.c -O3 -o c/loops.out > /dev/null
fi
c/loops.out
# runc c/loops.c
echo

echo crystal
if [ ! -f crystal/loops ]; then
  crystal build crystal/loops.cr -o crystal/loops > /dev/null
fi
crystal/loops
# crystal run crystal/loops.cr
echo

echo csharp
if [ ! -f csharp/bin/Debug/netcoreapp2.1/loops.dll ]; then
  dotnet build chsarp > /dev/null
fi
dotnet csharp/bin/Debug/netcoreapp2.1/loops.dll
echo

echo fsharp
if [ ! -d fsharp/bin/Debug/netcoreapp2.1/loops.dll ]; then
  dotnet build fsharp > /dev/null
fi
dotnet fsharp/bin/Debug/netcoreapp2.1/loops.dll
echo

echo haskell
if [ ! -f  ]; then
  ghc haskell/loops.hs -o haskell/loops > /dev/null
fi
haskell/loops
# runhaskell loops.hs
echo

echo java
if [ ! -f Loops.class ]; then
  javac -d java java/Loops.java > /dev/null
fi
java -cp java Loops
# runjava java/Loops.java
echo

echo javascript
node javascript/loops.js
echo

echo julia
julia julia/loops.jl
echo

echo powershell
pwsh-preview powershell/loops.ps1
echo

echo python
python python/loops.py
echo

echo python3
python3 python3/loops.py
echo

echo ruby
ruby ruby/loops.rb
echo

echo typescript
if [ ! -f loops.ts.js ]; then
  tsc typescript/loops.ts --out typescript/loops.js --target esnext > /dev/null
fi
node typescript/loops.js
# runtypescript typescript/loops.ts
echo
